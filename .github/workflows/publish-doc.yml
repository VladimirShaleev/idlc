name: Publish documentation

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        runVcpkgInstall: false

    - name: Install Emsdk
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: 4.0.10
        actions-cache-folder: 'emsdk-cache'

    - name: Set build output dir
      id: strings
      shell: bash
      run: |
        echo "build-output-wasm-dir=${{ github.workspace }}/build-wasm" >> "$GITHUB_OUTPUT"
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install Ninja
      run: sudo apt-get install -y ninja-build

    - name: Install Doxygen
      run: |
        sudo apt-get install -y graphviz
        wget https://github.com/doxygen/doxygen/releases/download/Release_1_12_0/doxygen-1.12.0.linux.bin.tar.gz
        tar -xf doxygen-1.12.0.linux.bin.tar.gz
        cd doxygen-1.12.0
        sudo make
        sudo make install
        doxygen --version

    - name: Configure CMake (JS module)
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-wasm-dir }} -S ${{ github.workspace }}
        -DVCPKG_TARGET_TRIPLET=wasm32-emscripten
        -DCMAKE_TOOLCHAIN_FILE=${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake
        -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=${EMSDK}/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
        -DCMAKE_CROSSCOMPILING_EMULATOR=${EMSDK_NODE}
        -DIDLC_BUILD_DOC=OFF
        -DIDLC_BUILD_TOOL=OFF
        -DIDLC_USE_IDLC=ON
        -DIDLC_BUILD_PACKAGES=OFF
        -DCMAKE_BUILD_TYPE=MinSizeRel
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_C_COMPILER=clang
        -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja
        -G Ninja
  
    - name: Build JS module
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-wasm-dir }}
        cp ${{ steps.strings.outputs.build-output-wasm-dir }}/dist/idlc.esm.js ${{ github.workspace }}/doc/idlc.esm.js

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }} -S ${{ github.workspace }}
        -DIDLC_BUILD_DOC=ON
        -DIDLC_BUILD_TOOL=OFF
        -DIDLC_USE_IDLC=OFF
        -DIDLC_BUILD_PACKAGES=OFF
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_C_COMPILER=clang
        -G Ninja

    - name: Build Documentation
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --target doc

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ steps.strings.outputs.build-output-dir }}/doc/html
