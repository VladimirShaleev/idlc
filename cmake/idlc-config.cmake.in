@PACKAGE_INIT@
include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")

if(TARGET @PROJECT_NAME@::@PROJECT_NAME@)
    function(idlc_compile)
        set(options WARN_AS_ERRORS)
        set(oneValueArgs NAME GENERATOR SOURCE OUTPUT VERSION)
        set(multiValueArgs IMPORTS DEPENDS)
        cmake_parse_arguments(PARSE_ARGV 0 IDLC_ARG "${options}" "${oneValueArgs}" "${multiValueArgs}")
        set(IDLC_ARG_CMD "")
        if(IDLC_ARG_WARN_AS_ERRORS)
            list(APPEND IDLC_ARG_CMD "-w")
        endif()
        if(IDLC_ARG_VERSION)
            list(APPEND IDLC_ARG_CMD "--apiver" ${IDLC_ARG_VERSION})
        endif()
        foreach(IMPORT ${IDLC_ARG_IMPORTS})
            list(APPEND IDLC_ARG_CMD "-i" "\"${IMPORT}\"")
        endforeach()
        string(TOLOWER ${IDLC_ARG_GENERATOR} IDLC_ARG_GEN)
        set(IDLC_TARGET_OUTPUTS ${IDLC_ARG_OUTPUT})
        if(IDLC_ARG_GEN STREQUAL "c")
            get_filename_component(IDLC_ARG_OUTPUT "${IDLC_ARG_OUTPUT}/../" ABSOLUTE)
        endif()
        add_custom_command(OUTPUT ${IDLC_TARGET_OUTPUTS}
            COMMAND @PROJECT_NAME@::@PROJECT_NAME@ ${IDLC_ARG_CMD} -g ${IDLC_ARG_GEN} -o ${IDLC_ARG_OUTPUT} ${IDLC_ARG_SOURCE}
            VERBATIM
            DEPENDS ${IDLC_ARG_SOURCE} ${IDLC_ARG_DEPENDS}
            COMMENT "[idlc] Building IDL")
        set(IDLC_${IDLC_ARG_NAME}_OUTPUTS ${IDLC_TARGET_OUTPUTS} PARENT_SCOPE)  
    endfunction()
endif()
