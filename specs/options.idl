@ Source code.
@ Used to provide source code in memory. [detail]
struct Source
    field Name {Str} @ Source name (used to resolve imports)
    field Data {ConstData} @ Source code.
    field Size {Uint32} @ Size of {Data} in bytes.

@ Api version.
@ Used to set {Options.SetVersion} the API version. [detail]
struct ApiVersion
    field Major {Uint32} @ Major component of the version.
    field Minor {Uint32} @ Minor component of the version.
    field Micro {Uint32} @ Micro component of the version.

@ Callback to get sources.
@ Used to retrieve and compile sources from memory. [detail]
@ ```
    Should return the source if the file can be resolved, or null to indicate 
    to the compiler that it cannot resolve the source and should try to find 
    the source elsewhere (e.g. via import paths)``` [return]
@ If the callback allocates memory, then you can free it in the callback {ReleaseImportCallback}. [see]
callback ImportCallback {Source} [ref,optional]
    arg Name {Str} @ The name of the file that the compiler is trying to get (for example, when it encounters "import").
    arg Depth {Uint32} @ Current imports nesting level.
    arg Data {Data} [userdata] @ User data specified when setting up a callback.

@ Callback to release sources.
@ If {ImportCallback} allocated memory dynamically for the source, you can free it here. [detail]
@ {ImportCallback}. [see]
callback ReleaseImportCallback
    arg Source {Source} [ref] @ Source for release.
    arg Data {Data} [userdata] @ User data specified when setting up a callback.

@ TODO.
@ TODO. [detail]
callback WriteCallback
    arg Source {Source} [const,ref] @ TODO.
    arg Data {Data} [userdata] @ TODO.

@ TODO.
@ TODO. [detail]
interface Options
    prop DebugMode [get(GetDebugMode),set(SetDebugMode)] @ Enable debug mode.
    prop WarningsAsErrors [get(GetWarningsAsErrors),set(SetWarningsAsErrors)] @ TODO.
    prop OutputDir [get(GetOutputDir),set(SetOutputDir)] @ TODO.
    prop ImportDirs [get(GetImportDirs),set(SetImportDirs)] @ TODO.
    prop Additions [get(GetAdditions),set(SetAdditions)] @ TODO.

    event Importer [get(GetImporter),set(SetImporter)] @ TODO.
    event ReleaseImport [get(GetReleaseImport),set(SetReleaseImport)] @ TODO.
    event Writer [get(GetWriter),set(SetWriter)] @ TODO.

    @ Creates new options instance.
    @ TODO: [detail]
    @ TODO: [return]
    method Create {Result} [ctor]
        arg Options {Options} [result] @ New options instance.

    @ Increments reference count.
    @ Manages options instance lifetime. [detail]
    @ Reference to same options. [return]
    @ {Destroy} [see]
    method Reference {Options} [refinc]
        arg Options {Options} [this] @ Target options instance.

    @ Releases options instance.
    @ Destroys when reference count reaches zero. [detail]
    @ {Reference} [see]
    method Destroy [destroy]
        arg Options {Options} [this] @ Options to destroy.

    @ Get debug mode.
    @ Return *{True}* is debug mode enabled. [detail]
    @ *{True}* is enabled. [return]
    @ {SetDebugMode} [see]
    method GetDebugMode {Bool} [const]
        arg Options {Options} [this] @ Target options.

    @ Set debug mode.
    @ Enable debug mode. [detail]
    @ {GetDebugMode} [see]
    method SetDebugMode
        arg Options {Options} [this] @ Target options.
        arg Enable {Bool} @ Enable debug.

    @ TODO.
    @ TODO. [detail]
    @ TODO. [return]
    @ {SetWarningsAsErrors} [see]
    method GetWarningsAsErrors {Bool} [const]
        arg Options {Options} [this] @ Target options.

    @ TODO.
    @ TODO. [detail]
    @ {GetWarningsAsErrors} [see]
    method SetWarningsAsErrors
        arg Options {Options} [this] @ Target options.
        arg Enable {Bool} @ TODO.

    @ TODO.
    @ TODO. [detail]
    @ TODO. [return]
    @ {SetOutputDir} [see]
    method GetOutputDir {Str} [const]
        arg Options {Options} [this] @ Target options.

    @ TODO.
    @ TODO. [detail]
    @ {GetOutputDir} [see]
    method SetOutputDir
        arg Options {Options} [this] @ Target options.
        arg Dir {Str} @ TODO.

    @ TODO.
    @ TODO. [detail]
    @ TODO. [return]
    @ {SetImportDirs} [see]
    method GetImportDirs [const]
        arg Options {Options} [this] @ Target options.
        arg DirCount {Uint32} [in,out] @ Number of directories.
        arg Dirs {Str} [result,array(DirCount)] @ Import directories.

    @ TODO.
    @ TODO. [detail]
    @ {GetImportDirs} [see]
    method SetImportDirs
        arg Options {Options} [this] @ Target options.
        arg DirCount {Uint32} @ Number of directories.
        arg Dirs {Str} [const,array(DirCount)] @ Import directories.

    @ TODO.
    @ TODO. [detail]
    @ TODO. [return]
    method GetImporter {ImportCallback} [const]
        arg Options {Options} [this] @ Target options.
        arg Data {Data} [out,userdata] @ Callback user data pointer.

    @ TODO.
    @ TODO. [detail]
    method SetImporter
        arg Options {Options} [this] @ Target options.
        arg Callback {ImportCallback} @ Callback function.
        arg Data {Data} [userdata] @ Callback user data.

    @ TODO.
    @ TODO. [detail]
    @ TODO. [return]
    method GetReleaseImport {ReleaseImportCallback} [const]
        arg Options {Options} [this] @ Target options.
        arg Data {Data} [out,userdata] @ Callback user data pointer.

    @ TODO.
    @ TODO. [detail]
    method SetReleaseImport
        arg Options {Options} [this] @ Target options.
        arg Callback {ReleaseImportCallback} @ Callback function.
        arg Data {Data} [userdata] @ Callback user data.

    @ TODO.
    @ TODO. [detail]
    @ TODO. [return]
    method GetWriter {WriteCallback} [const]
        arg Options {Options} [this] @ Target options.
        arg Data {Data} [out,userdata] @ Callback user data pointer.

    @ TODO.
    @ TODO. [detail]
    method SetWriter
        arg Options {Options} [this] @ Target options.
        arg Callback {WriteCallback} @ Callback function.
        arg Data {Data} [userdata] @ Callback user data.

    @ TODO.
    @ TODO. [detail]
    @ TODO. [return]
    @ {SetAdditions} [see]
    method GetAdditions [const]
        arg Options {Options} [this] @ Target options.
        arg AdditionCount {Uint32} [in,out] @ Number of additions.
        arg Additions {Str} [result,array(AdditionCount)] @ Additions.

    @ TODO.
    @ TODO. [detail]
    @ {GetAdditions} [see]
    @ Generator specific. For C these are additional headers. [note]
    method SetAdditions
        arg Options {Options} [this] @ Target options.
        arg AdditionCount {Uint32} @ Number of additions.
        arg Additions {Str} [const,array(AdditionCount)] @ Additions.

    @ TODO.
    @ TODO. [detail]
    @ {SetVersion} [see]
    method GetVersion {ApiVersion} [const,ref,optional]
        arg Options {Options} [this] @ Target options.

    @ TODO.
    @ TODO. [detail]
    @ {GetVersion} [see]
    method SetVersion
        arg Options {Options} [this] @ Target options.
        arg Version {ApiVersion} [const,ref,optional] @ TODO.
